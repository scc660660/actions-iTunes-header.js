/// <reference types="node" />
import { Cancellable } from "./cancellable";
import { Signal } from "./signals";
import { inspect } from "util";
export declare class Service {
    private impl;
    close: Signal<ServiceCloseHandler>;
    message: Signal<ServiceMessageHandler>;
    constructor(impl: any);
    activate(cancellable?: Cancellable): Promise<void>;
    cancel(cancellable?: Cancellable): Promise<void>;
    request(parameters: any, cancellable?: Cancellable): Promise<any>;
    [inspect.custom](depth: any, options: any): string;
}
export type ServiceCloseHandler = () => void;
export type ServiceMessageHandler = (message: any) => void;
